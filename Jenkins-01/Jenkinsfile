pipeline {
    agent any 

    options {
        timestamps()
        skipStagesAfterUnstable()
    }

    parameters {
        string(name: 'USERNAME', defaultValue: 'devops_student', description: 'Your name')
    }

    stages {
        stage('Preparation') {
            steps {
                echo "Welcome, ${params.USERNAME}"
                deleteDir()
            }
        }

        stage('Cloning repo') {
            steps {
                git branch: 'main', url: 'https://github.com/KushagraAgrawal29/practise.git'
            }
        }

        stage('Run Hello Script') {
            steps {
                sh 'chmod +x Jenkins-01/hello.sh && ./Jenkins-01/hello.sh'
            }
        }

        stage('Archive Output') {
            steps {
                sh 'echo "Output generated by Jenkins" > output.txt'
                archiveArtifacts artifacts: 'output.txt', fingerprint: true
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully.'
            mail to: 'athravgarg29@gmail.com',
                 subject: "‚úÖ SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The Jenkins pipeline '${env.JOB_NAME}' completed successfully.\nBuild URL: ${env.BUILD_URL}"
        }

        failure {
            echo '‚ùå Pipeline failed.'
            mail to: 'athravgarg29@gmail.com',
                 subject: "‚ùå FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The Jenkins pipeline '${env.JOB_NAME}' has failed.\nCheck console: ${env.BUILD_URL}"
        }

        always {
            echo 'üì¨ This runs whether success or failure.'
        }
    }
}
